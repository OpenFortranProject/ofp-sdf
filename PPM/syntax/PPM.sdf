%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%  PPM DSL definition
%%
%%  Copyright ((c)) 2013, TBD.
%%  All rights reserved. See the file "LICENSE" for details.
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Rosebud syntax
%% definition

module PPM

%% Rosebud syntax
%% language PPM

%% Rosebud syntax
%% title       "Halo array extensions to Fortran for stencil-based computation"

%% Rosebud
%% summary     "This DSL provides syntax for extending array declarations in      "
%%             "Fortran so that arrays explicitly have a halo region surrounding  "
%%             "the interior portion of a normal array.  Explicit halo            "
%%             "declarations allows the compiler to manage the memory of an       "
%%             "array that is distributed across memory boundaries.  In particular"
%%             "the declaration of a halo region provides the compiler with       "
%%             "information regarding the regions of the array that are shared    "
%%             "between processing (and memory) elements.                         "

%% Rosebud syntax
%% version     1.0
%% maintainer  srasmus2@uoregon.edu
%% web site    dtec-xstack.org

%% Rosebud syntax
%% host        Fortran
%% requires    none
%% id          org.dtec-xstack.uoregon.ppm

imports Main
exports

%%------------------------------------------------------------------------------
%% Rosebud syntax
%% concrete syntax
%%------------------------------------------------------------------------------

%% Rosebud syntax
%% extends host sorts

sorts 
%% Rosebud syntax
%% uses host sorts
%% Type
   
%% Rosebud syntax
%% private sorts

%% Rosebud syntax
%% context-free rules
  ImplicitPrefixStmt
  ImplicitPostfixStmt

  ImplicitAffixSpec
  AffixTypeSpec

context-free syntax

   ImplicitPrefixStmt  -> ImplicitPartStmt
   ImplicitPostfixStmt -> ImplicitPartStmt
   ImplicitPrefixStmt  -> SpecAndExecConstruct
   ImplicitPostfixStmt -> SpecAndExecConstruct

%% May need to change ImplicitAffixStmt: get "'_bind'" which probably won't be good
   OptLabel 'IMPLICIT' 'PREFIX' {ImplicitAffixSpec ','}+    EOS -> ImplicitPrefixStmt {cons("ImplicitPrefixStmt")}
   OptLabel 'IMPLICIT' 'POSTFIX' {ImplicitAffixSpec ','}+   EOS -> ImplicitPostfixStmt {cons("ImplicitPostfixStmt")}

   AffixTypeSpec '(' {Scon ','}+ ')'                            -> ImplicitAffixSpec {cons("ImplicitAffixSpec")}
   DeclarationTypeSpec OptAttrSpecList                          -> AffixTypeSpec     {cons("AffixTypeSpec")}
