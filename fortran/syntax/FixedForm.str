module FixedForm

signature
  constructors
    no-ws           : OptWS
    ws              : WS -> OptWS
    no-char         : NoChar
    stchar          : STARTCHAR -> StartChar
    prechar         : PRECHAR -> PreChar
    conchar         : CONTCHAR -> ContChar
    comchar         : COMMENTCHAR -> CommentChar
    comchar         : BANGCHAR -> BangChar
    eol             : EOL -> Eol
                    : CHARS -> Text
    StmtBlock       : Stmt * List(FollowLine) -> StmtBlock
    LabeledStmt     : LABELTAB * NoChar * Text * Eol -> Stmt
    LabeledStmt     : LABEL * StartChar * Text * Eol -> Stmt
    Stmt            : TABSTART * NoChar * Text * Eol -> Stmt
    Stmt            : START * StartChar * Text * Eol -> Stmt
    Continuation    : START * ContChar * CHARS * Eol -> Continuation
    FreeFormComment : WS * BangChar * CHARS * Eol -> CommentLine
    Comment         : CommentChar * CHARS * Eol -> CommentLine
    BlankLine       : OptWS * Eol -> BlankLine
    Preprocess      : PreChar * CHARS * Eol -> PreprocessLine
                    : PreprocessLine -> FollowLine
                    : Continuation -> FollowLine
                    : CommentLine -> FollowLine
                    : BlankLine -> FollowLine
                    : PreprocessLine -> InitialComment
                    : CommentLine -> InitialComment
                    : BlankLine -> InitialComment
    File            : List(InitialComment) * List(StmtBlock) -> File
                    : String -> LABELTAB
                    : String -> LABEL
                    : String -> START
                    : String -> TABSTART
                    : String -> CONTCHAR
                    : String -> STARTCHAR
                    : String -> COMMENTCHAR
                    : String -> PRECHAR
                    : String -> BANGCHAR
                    : String -> CHARS
                    : String -> WS
                    : String -> EOL


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
