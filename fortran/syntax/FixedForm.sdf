module FixedForm

exports 

  sorts

    EOL WS DIGIT LETTER CHARS
    LABEL LABELTAB START TABSTART
    STARTCHAR CONTCHAR COMMENTCHAR BANGCHAR PRECHAR
    StartChar ContChar CommentChar BangChar PreChar NoChar Eol OptWS
    BlankLine CommentLine Continuation FollowLine PreprocessLine Stmt
    InitialComment StmtBlock File

  context-free start-symbols

    File

  lexical syntax

    [\n]                        -> EOL
    [\r][\n]                    -> EOL
    [\ \t]+                     -> WS

    [0-9]                       -> DIGIT
    [a-zA-Z]                    -> LETTER
   ~[\r\n]*                     -> CHARS

%%  "&"                         -> IGNORE    % predefined sort (maybe) %
                                             % REJECT also a predefined sort %
                                             % CHAR   also a predefined sort %

    "!"                         -> BANGCHAR
    "#"                         -> PRECHAR
    [\$]                        -> PRECHAR   % WARNING - doesn't work with gfortran as preprocess char %

    [cC\*\!]                    -> COMMENTCHAR

%% start of a non-labeled statement

   [\ 0\t]                      -> STARTCHAR
  ~[\ 0\t\n]                    -> CONTCHAR

   [\t]                         -> TABSTART
   [\ ][\t]                     -> TABSTART
   [\ ][\ ][\t]                 -> TABSTART
   [\ ][\ ][\ ][\t]             -> TABSTART
   [\ ][\ ][\ ][\ ][\t]         -> TABSTART
   [\ ][\ ][\ ][\ ][\ ]         ->    START

%% labels: max 5 digits with space in 6th pos
%%
    [0-9][\ ][\ ][\ ][\ ]       -> LABEL
    [\ ][0-9][\ ][\ ][\ ]       -> LABEL
    [\ ][\ ][0-9][\ ][\ ]       -> LABEL
    [\ ][\ ][\ ][0-9][\ ]       -> LABEL
    [\ ][\ ][\ ][\ ][0-9]       -> LABEL

    [0-9][\ ]* [\t]             -> LABELTAB
    [\ ][0-9][\t]               -> LABELTAB
    [\ ][\ ][0-9][\t]           -> LABELTAB
    [\ ][\ ][\ ][0-9][\t]       -> LABELTAB

    [0-9][0-9] [\ ] [\ ] [\ ]   -> LABEL
    [\ ] [0-9][0-9] [\ ] [\ ]   -> LABEL
    [\ ] [\ ] [0-9][0-9] [\ ]   -> LABEL
    [\ ] [\ ] [\ ] [0-9][0-9]   -> LABEL

    [0-9][0-9][\ ]* [\t]        -> LABELTAB
    [\ ] [0-9][0-9] [\t]        -> LABELTAB
    [\ ] [\ ] [0-9][0-9] [\t]   -> LABELTAB

    [0-9][0-9][0-9] [\ ] [\ ]   -> LABEL
    [\ ] [0-9][0-9][0-9] [\ ]   -> LABEL
    [\ ] [\ ] [0-9][0-9][0-9]   -> LABEL

    [0-9][0-9][0-9][\ ]* [\t]   -> LABELTAB
    [\ ] [0-9][0-9][0-9] [\t]   -> LABELTAB

    [0-9][0-9][0-9][0-9] [\ ]   -> LABEL
    [\ ] [0-9][0-9][0-9][0-9]   -> LABEL

    [0-9][0-9][0-9][0-9] [\t]   -> LABELTAB

    [0-9][0-9][0-9][0-9][0-9]   -> LABEL

  lexical restrictions
     WS  -/- [\ \t]

  context-free syntax

    InitialComment* StmtBlock*  -> File {cons("File")}

    BlankLine                   -> InitialComment
    CommentLine                 -> InitialComment
    PreprocessLine              -> InitialComment

    BlankLine                   -> FollowLine
    CommentLine                 -> FollowLine
    Continuation                -> FollowLine
    PreprocessLine              -> FollowLine

    PreChar         CHARS   Eol -> PreprocessLine {cons("Preprocess")}
    OptWS                   Eol -> BlankLine      {cons("BlankLine")}
    CommentChar     CHARS   Eol -> CommentLine    {cons("Comment")}
    WS BangChar     CHARS   Eol -> CommentLine    {cons("FreeFormComment")}

    START  ContChar CHARS   Eol -> Continuation   {cons("Continuation")}

    START StartChar CHARS   Eol -> Stmt           {cons("Stmt")}
    TABSTART NoChar CHARS   Eol -> Stmt           {cons("Stmt")}

    LABEL StartChar CHARS   Eol -> Stmt           {cons("LabeledStmt")}
    LABELTAB NoChar CHARS   Eol -> Stmt           {cons("LabeledStmt")}

    Stmt FollowLine*            -> StmtBlock      {cons("StmtBlock")}


    EOL                         -> Eol         {cons("eol")}

    BANGCHAR                    -> BangChar    {cons("comchar")}
    COMMENTCHAR                 -> CommentChar {cons("comchar")}
    CONTCHAR                    -> ContChar    {cons("conchar")}
    PRECHAR                     -> PreChar     {cons("prechar")}
    STARTCHAR                   -> StartChar   {cons("stchar")}

    % empty %                   -> NoChar      {cons("no-char")}

    WS                          -> OptWS       {cons("ws")}
    % empty %                   -> OptWS       {cons("no-ws")}
