Program(
  [ Module(
      ModuleStmt(no-label(), "myjunk"){Comment("

")}
    , Scope(
        [ DerivedTypeDef(
            DerivedTypeStmt(no-label(), [], "POINT", [])
          , []
          , []
          , []
          , TypeBoundProcPart(
              no-binding-private-stmt()
            , [ TypeBoundProcedureStmt(
                  no-label()
                , [Pass(no-arg-name())]
                , [TypeBoundProcDecl("LENGTH", "POINT_LENGTH")]
                , eos("\n   ")
                )
              , TypeBoundProcedureStmt(
                  no-label()
                , []
                , [TypeBoundProcDecl("length", "point_length")]
                , eos("\n   ")
                )
              , TypeBoundProcedureStmt(
                  no-label()
                , []
                , [TypeBoundProcDecl("length", "point_length")]
                , eos("\n")
                )
              , TypeBoundProcedureInterfaceStmt(
                  "10"
                , "proc_name"
                , [NON_OVERRIDABLE(), DEFERRED()]
                , ["sink", "or", "swim"]
                , eos("\n")
                )
              ]
            )
          , EndTypeStmt(no-label(), "POINT"){Comment("

")}
          )
        ]
      , []
      , []
      )
    , EndModuleStmt(no-label(), no-module-name())
    )
  ]
){Comment("!! R448 type-bound-procedure-stmt
!    is PROCEDURE [ [ , binding-attr-list ] :: ] type-bound-proc-decl-list
!    or PROCEDURE (interface-name ), binding-attr-list :: binding-name-list

")}
