Program(
  [ MainProgram(
      no-program-stmt()
    , Scope(
        []
      , [ AssociateConstruct(
            AssociateStmt(no-label(), no-name(), [Association("a", VarRef("b"))]){Comment("
  ")}
          , [AssignmentStmt(no-label(), VarDef("x"), IntVal("1"))]
          , EndAssociateStmt(no-label(), no-name()){Comment("

")}
          )
        , AssociateConstruct(
            AssociateStmt(
              no-label()
            , no-name()
            , [Association("a", VarRef("b")), Association("c", VarRef("d"))]
            ){Comment("
  ")}
          , [AssignmentStmt(no-label(), VarDef("x"), IntVal("1"))]
          , EndAssociateStmt(no-label(), no-name()){Comment("

")}
          )
        , AssociateConstruct(
            AssociateStmt(
              no-label()
            , "my_assoc"
            , [Association("a", VarRef("b")), Association("c", VarRef("d"))]
            ){Comment("
  ")}
          , [AssignmentStmt(no-label(), VarDef("x"), IntVal("1"))]
          , EndAssociateStmt(no-label(), "my_assoc"){Comment("

")}
          )
        ]
      , []
      )
    , EndProgramStmt(no-label(), no-program-name()){Comment("

")}
    )
  ]
){Comment("!! R802 associate-construct
!
!      associate-construct  is  associate-stmt
!                                 block
!                               end-associate-stmt
!
!      associate-stmt  is  [ associate-construct-name : ] ASSOCIATE 
!                            ( association-list )
!
!      association  is  associate-name => selector
!
!      selector  is  expr
!                or  variable
!
! Tested here: associate-construct, associate-stmt, end-associate-smt, 
! associate-construct-name, association-list, association, and associate-name.
!
! Not tested here: block, selector, expr, and variable.

")}
