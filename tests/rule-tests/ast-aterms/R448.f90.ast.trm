Program(
  "!! R448 type-bound-procedure-stmt\n!    is PROCEDURE [ [ , binding-attr-list ] :: ] type-bound-proc-decl-list\n!    or PROCEDURE (interface-name ), binding-attr-list :: binding-name-list\n!\n!   - F2008 addition\n!   - multiple type-bound procedures can be declared in a single type-bound\n!     procedure statement\n!\n"
, [ Module(
      ModuleStmt(no-label(), "myjunk", eos("\n\n"))
    , SpecificationPart(
        []
      , []
      , no-implicit-part()
      , [ DerivedTypeDef(
            DerivedTypeStmt(no-label(), no-list(), "POINT", no-list(), eos("\n"))
          , []
          , []
          , []
          , TypeBoundProcedurePart(
              ContainsStmt(no-label(), eos("\n   "))
            , no-binding-private-stmt()
            , [ TypeBoundProcedureStmt(
                  no-label()
                , comma-list([Pass(no-name())])
                , [TypeBoundProcDecl("LENGTH", "POINT_LENGTH")]
                , eos("\n   ")
                )
              , TypeBoundProcedureStmt(
                  no-label()
                , no-list()
                , [TypeBoundProcDecl("length", "point_length")]
                , eos("\n   ")
                )
              , TypeBoundProcedureStmt(
                  no-label()
                , no-list()
                , [TypeBoundProcDecl("length", "point_length")]
                , eos("\n")
                )
              , TypeBoundProcedureInterfaceStmt(
                  "10"
                , "proc_name"
                , [NON_OVERRIDABLE(), DEFERRED()]
                , ["sink", "or", "swim"]
                , eos("\n")
                )
              ]
            )
          , EndTypeStmt(no-label(), "POINT", eos("\n\n"))
          )
        ]
      )
    , no-module-subprogram-part()
    , EndModuleStmt(no-label(), no-name(), eos("\n"))
    )
  ]
)
