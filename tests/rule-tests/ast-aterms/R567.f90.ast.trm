Program(
  "!! R567 equivalence-object\n!    is variable-name\n!    or array-element\n!    or substring\n\n"
, [ MainProgram(
      no-program-stmt()
    , initial-spec-part([], [])
    , SpecAndExecPart(
        [ TypeDeclarationStmt(
            no-label()
          , IntrinsicType(REAL(no-kind()))
          , comma-list(
              [Dimension([ExplicitShape(no-lower-bound(), IntLiteralConstant("10", no-kind()))])]
            )
          , [ EntityDecl("B", no-list(), no-list(), no-char-length(), no-init())
            , EntityDecl("Y", no-list(), no-list(), no-char-length(), no-init())
            , EntityDecl("Z", no-list(), no-list(), no-char-length(), no-init())
            ]
          , eos("\n\n")
          )
        , EquivalenceStmt(
            no-label()
          , [ equivalence-set-list(
                DataRef([PartRef("a", no-section-subscripts(), no-image-selector())])
              , [ DataRef(
                    [PartRef("b", paren-list([IntLiteralConstant("3", no-kind())]), no-image-selector())]
                  )
                ]
              )
            ]
          , eos("\n")
          )
        , EquivalenceStmt(
            no-label()
          , [ equivalence-set-list(
                DataRef([PartRef("x", no-section-subscripts(), no-image-selector())])
              , [ DataRef(
                    [PartRef("y", paren-list([IntLiteralConstant("2", no-kind())]), no-image-selector())]
                  )
                , DataRef(
                    [PartRef("z", paren-list([IntLiteralConstant("4", no-kind())]), no-image-selector())]
                  )
                ]
              )
            ]
          , eos("\n\n")
          )
        ]
      )
    , no-subprogram-part()
    , EndProgramStmt(no-label(), no-program-name(), eos("\n"))
    )
  ]
)
