Program(
  "!! R537 data-implied-do\n!    is ( data-i-do-object-list, data-i-do-variable\n!       = scalar-int-constant-expr, scalar-int-constant-expr [ , scalar-int-constant-expr ] )\n!\n! TODO- Fix AMBIGUITIES\n!\n! From NOTE 5.29\n!\n"
, [ MainProgram(
      no-program-stmt()
    , initial-spec-part([], [])
    , SpecAndExecPart(
        [ TypeDeclarationStmt(
            no-label()
          , IntrinsicType(CHARACTER(CharSelector(LengthSelector(IntVal("10")), no-kind())))
          , no-list()
          , [EntityDecl("NAME", no-list(), no-list(), no-char-length(), no-init())]
          , eos("\n")
          )
        , TypeDeclarationStmt(
            no-label()
          , IntrinsicType(INTEGER())
          , comma-list(
              [Dimension(
                 [ExplicitShape(IntVal("0"), IntVal("9"))]
               )]
            )
          , [EntityDecl("MILES", no-list(), no-list(), no-char-length(), no-init())]
          , eos("\n")
          )
        , TypeDeclarationStmt(
            no-label()
          , IntrinsicType(REAL())
          , comma-list(
              [ Dimension(
                  [ ExplicitShape(no-lower-bound(), IntVal("100"))
                  , ExplicitShape(no-lower-bound(), IntVal("100"))
                  ]
                )
              ]
            )
          , [EntityDecl("SKEW", no-list(), no-list(), no-char-length(), no-init())]
          , eos("\n")
          )
        , TypeDeclarationStmt(
            no-label()
          , derived-type-spec(DerivedTypeSpec("NODE", no-list()))
          , comma-list([POINTER()])
          , [EntityDecl("HEAD_OF_LIST", no-list(), no-list(), no-char-length(), no-init())]
          , eos("\n")
          )
        , TypeDeclarationStmt(
            no-label()
          , derived-type-spec(DerivedTypeSpec("PERSON", no-list()))
          , no-list()
          , [ EntityDecl("MYNAME", no-list(), no-list(), no-char-length(), no-init())
            , EntityDecl("YOURNAME", no-list(), no-list(), no-char-length(), no-init())
            ]
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSetList_2(
              DataStmtSet(
                [DataRef([PartRef("NAME", no-section-subscripts(), no-image-selector())])]
              , [DataStmtValue(no-repeat(), "'JOHN DOE'")]
              )
            , DataStmtSet(
                [DataRef([PartRef("MILES", no-section-subscripts(), no-image-selector())])]
              , [DataStmtValue(DataStmtRepeat("10"), IntVal("0"))]
              )
            )
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSet(
              [ DataImpliedDo(
                  [ DataImpliedDo(
                      [ DataRef(
                          [ PartRef(
                              "SKEW"
                            , paren-list(
                                [ DataRef([PartRef("K", no-section-subscripts(), no-image-selector())])
                                , DataRef([PartRef("J", no-section-subscripts(), no-image-selector())])
                                ]
                              )
                            , no-image-selector()
                            )
                          ]
                        )
                      ]
                    , DataIDoVariable(VarRef("J"))
                    , IntVal("1")
                    , DataRef([PartRef("K", no-section-subscripts(), no-image-selector())])
                    , no-expr()
                    )
                  ]
                , DataIDoVariable(VarRef("K"))
                , IntVal("1")
                , IntVal("100")
                , no-expr()
                )
              ]
            , [DataStmtValue(DataStmtRepeat("5050"), RealVal("0.0"))]
            )
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSet(
              [ DataImpliedDo(
                  [ DataImpliedDo(
                      [ DataRef(
                          [ PartRef(
                              "SKEW"
                            , paren-list(
                                [ DataRef([PartRef("K", no-section-subscripts(), no-image-selector())])
                                , DataRef([PartRef("J", no-section-subscripts(), no-image-selector())])
                                ]
                              )
                            , no-image-selector()
                            )
                          ]
                        )
                      ]
                    , DataIDoVariable(VarRef("J"))
                    , Plus(
                        DataRef([PartRef("K", no-section-subscripts(), no-image-selector())])
                      , IntVal("1")
                      )
                    , IntVal("100")
                    , no-expr()
                    )
                  ]
                , DataIDoVariable(VarRef("K"))
                , IntVal("1")
                , IntVal("99")
                , no-expr()
                )
              ]
            , [DataStmtValue(DataStmtRepeat("4950"), RealVal("1.0"))]
            )
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSet(
              [DataRef([PartRef("HEAD_OF_LIST", no-section-subscripts(), no-image-selector())])]
            , [DataStmtValue(no-repeat(), StructureConstructor(DerivedTypeSpec("NULL", no-list()), []))]
            )
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSet(
              [DataRef([PartRef("MYNAME", no-section-subscripts(), no-image-selector())])]
            , [ DataStmtValue(
                  no-repeat()
                , DataRef(
                    [PartRef(
                       "PERSON"
                     , paren-list([IntVal("21"), "'JOHN SMITH'"])
                     , no-image-selector()
                     )]
                  )
                )
              ]
            )
          , eos("\n")
          )
        , DataStmt(
            no-label()
          , DataStmtSet(
              [ DataRef(
                  [PartRef("YOURNAME", no-section-subscripts(), no-image-selector()), PartRef("AGE", no-section-subscripts(), no-image-selector())]
                )
              , DataRef(
                  [PartRef("YOURNAME", no-section-subscripts(), no-image-selector()), PartRef("NAME", no-section-subscripts(), no-image-selector())]
                )
              ]
            , [DataStmtValue(no-repeat(), IntVal("35")), DataStmtValue(no-repeat(), "'FRED BROWN'")]
            )
          , eos("\n\n")
          )
        ]
      )
    , no-subprogram-part()
    , EndProgramStmt(no-label(), no-program-name(), eos("\n\n"))
    )
  ]
)
