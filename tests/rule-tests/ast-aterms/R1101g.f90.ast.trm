Program(
  "! Test main-program\n!\n!      main-program  is  [ program-stmt ]\n!                          [ specification-part ]\n!                          [ execution-part ]\n!                          [ internal-subprogram-part ]\n!                        end-program-stmt\n!\n!      program-stmt  is  PROGRAM program-name\n!\n!      end-program-stmt  is  END [ PROGRAM [ program-name ] ]\n!\n! Not tested here: specification-part, execution-part, and \n! internal-subprogram-part.\n\n! Add all of the optionals together.\n"
, [ MainProgram(
      ProgramStmt(no-label(), "my_prog", eos("\n  "))
    , InitialSpecPart([], [])
    , SpecAndExecPart(
        [ TypeDeclarationStmt(
            no-label()
          , IntrinsicType(REAL())
          , no-list()
          , [EntityDecl("i", no-list(), no-list(), no-char-length(), no-init())]
          , eos("\n  ")
          )
        , AssignmentStmt(
            no-label()
          , DataRef([PartRef("i", no-section-subscripts(), no-image-selector())])
          , IntVal("1")
          , eos("\n")
          )
        ]
      )
    , SubprogramPart(
        ContainsStmt(no-label(), eos("\n  "))
      , [ SubroutineSubprogram(
            SubroutineStmt(no-label(), no-prefix(), "sub", no-list(), no-language-binding(), eos("\n  "))
          , InitialSpecPart([], [])
          , SpecAndExecPart([])
          , no-subprogram-part()
          , EndSubroutineStmt(no-label(), "sub", eos("\n"))
          )
        ]
      )
    , EndProgramStmt(no-label(), "my_prog", eos("\n"))
    )
  ]
)
