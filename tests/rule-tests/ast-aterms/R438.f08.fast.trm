Program(
  [ MainProgram(
      no-program-stmt()
    , Scope(
        [ DerivedTypeDef(
            DerivedTypeStmt(no-label(), [], "GRID_TYPE", []){Comment("
      ")}
          , []
          , []
          , [ DataComponentDefStmt(
                no-label()
              , REAL()
              , [ ALLOCATABLE()
                , Codimension(
                    [Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON())]
                  )
                ]
              , [ Var(
                    "GRID1"
                  , ArrayType(
                      REAL()
                    , ArraySpec(
                        [Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON())]
                      )
                    , []
                    )
                  , no-init()
                  )
                ]
              ){Comment("
      ")}
            , DataComponentDefStmt(
                no-label()
              , REAL()
              , [ALLOCATABLE()]
              , [ Var(
                    "GRID2"
                  , ArrayType(
                      REAL()
                    , ArraySpec(
                        [Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON())]
                      )
                    , CoarraySpec(
                        [Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON())]
                      )
                    )
                  , no-init()
                  )
                ]
              ){Comment("
      ")}
            , DataComponentDefStmt(
                no-label()
              , INTEGER()
              , []
              , [Var("i", INTEGER(), Init(IntVal("13")))]
              ){Comment("
   ")}
            ]
          , no-type-bound-procedure-part()
          , EndTypeStmt(no-label(), "GRID_TYPE"){Comment("

")}
          )
        , DerivedTypeDef(
            DerivedTypeStmt(no-label(), [], "nasty", []){Comment("
	")}
          , []
          , []
          , [ DataComponentDefStmt(
                no-label()
              , INTEGER()
              , []
              , [ Var("truth", INTEGER(), no-init())
                , Var("beauty", INTEGER(), no-init())
                , Var("ugly", INTEGER(), no-init())
                , Var("lies", INTEGER(), no-init())
                ]
              ){Comment("
	")}
            , DataComponentDefStmt(
                no-label()
              , REAL()
              , []
              , [ Var(
                    "foo"
                  , ArrayType(
                      REAL()
                    , ArraySpec(
                        [ Range(no-lower-bound(), IntVal("3"))
                        , Range(no-lower-bound(), IntVal("4"))
                        , Range(IntVal("5"), IntVal("9"))
                        ]
                      )
                    , []
                    )
                  , no-init()
                  )
                ]
              ){Comment("
	")}
            , DataComponentDefStmt(
                no-label()
              , REAL()
              , [ALLOCATABLE()]
              , [ Var(
                    "bar"
                  , ArrayType(REAL(), [], CoarraySpec([Range(no-lower-bound(), COLON())]))
                  , no-init()
                  )
                ]
              ){Comment("
	")}
            , DataComponentDefStmt(
                no-label()
              , CHARACTER()
              , []
              , [ Var("this", CHARACTER_LEN(IntVal("35")), no-init())
                , Var(
                    "ridiculous"
                  , ArrayType(
                      CHARACTER_LEN(IntVal("12"))
                    , ArraySpec(
                        [Range(no-lower-bound(), IntVal("5")), Range(no-lower-bound(), IntVal("6"))]
                      )
                    , []
                    )
                  , no-init()
                  )
                ]
              ){Comment("
        ")}
            , DataComponentDefStmt(
                no-label()
              , INTEGER()
              , []
              , [Var("that", INTEGER(), Init(IntVal("4")))]
              ){Comment("
	")}
            , DataComponentDefStmt(
                no-label()
              , REAL()
              , [ALLOCATABLE()]
              , [ Var(
                    "ridic"
                  , ArrayType(
                      REAL()
                    , ArraySpec([Range(no-lower-bound(), COLON()), Range(no-lower-bound(), COLON())])
                    , CoarraySpec([Range(no-lower-bound(), COLON())])
                    )
                  , no-init()
                  )
                ]
              ){Comment("
	")}
            , DataComponentDefStmt(
                no-label()
              , REAL()
              , [POINTER()]
              , [ Var(
                    "ridicule"
                  , ArrayType(REAL(), ArraySpec([Range(no-lower-bound(), COLON())]), [])
                  , PointerInit(FunctionReference("null", []))
                  )
                ]
              )
            ]
          , no-type-bound-procedure-part()
          , EndTypeStmt(no-label(), no-name()){Comment("

")}
          )
        ]
      , []
      , []
      )
    , EndProgramStmt(no-label(), no-name())
    )
  ]
){Comment("!! R438 component-decl
!    is component-name
!           [ ( component-array-spec ) ]
!           [ lbracket coarray-spec rbracket ]
!           [ * char-length ] [ component-initialization ]
!
! from NOTE 4.30
   ")}
